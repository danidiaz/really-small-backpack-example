{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE FlexibleInstances #-}
signature LogicIndef.Monad where

import Control.Monad.Writer
import Control.Monad.Reader
import Control.Monad.State
import Data.Kind

data M :: Type -> Type
instance Functor M
instance Applicative M
instance Monad M
instance MonadReader Int M
instance MonadWriter (Sum Int) M
instance MonadState Int M

